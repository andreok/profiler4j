<?xml version="1.0" encoding="ISO-8859-1"?>
<tip-collection>
   <tip>
<![CDATA[<h1>Improve your Profiling Session</h1>
Define profiling rules <b>as restrictive as possible</b> as this can improve the accuracy of
your measurements and impose less overhead. As a simple rule of thumb, leave only those
ACCEPT rules that refer to your application classes and, at the end of the list, put a 
REJECT on <tt>*(*)</tt>.
<p>
Remember that you can always change your mind and write new rules that can be 
<b>activated without restarting</b> your application.
]]>
   </tip>
   <tip>
<![CDATA[<h1>Profiler4j in Application Servers</h1>
Profiler4j can be used to profile applications running in JBoss and Tomcat. See our
FAQs for details.
]]>
   </tip>
   <tip>
<![CDATA[<h1>Need Help?</h1>
If you find any problems or have questions not yet addressed don't hesitate to contact
us. Visit the support forum (hosted by sourceforge). Also, let us know if Profiler4j
was useful to you and help us to improve it.
]]>
   </tip>

   <tip>
<![CDATA[<h1>Dump on Exit</h1>
The agent can be configured to dump a snapshot right before your profiled application
shuts down.
]]>
   </tip>

   <tip>
<![CDATA[<h1>Automatic Callgraph Dump</h1>
You can have Profiler4j automatically dump the callgraph as a picture on each
snapshot. This way you can quickly click through your profiling scenarios, taking
snapshots when appropriate without worrying about taking screen shots or the like.
]]>
   </tip>

   <tip>
<![CDATA[<h1>Select predecessors/successors in callgraph</h1>
Using shift + left/right arrows you can extend the selection of a node in the call graph.
This way you can easily follow a chain of method calls.
(If you like this one, try shift + pos1/end. :))
]]>
   </tip>
</tip-collection>